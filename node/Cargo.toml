[package]
name = "qf-node"
description = "A parachain node built with Substrate and Cumulus. From commit 3793fc3444e28d309e67513fda5afe153a2aa928 at https://github.com/QuantumFusion-network/polkadot-sdk"
version = "0.1.10"
license.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false
build = "build.rs"

[dependencies]
clap = { features = ["derive"], workspace = true }
codec = { workspace = true, default-features = true }
color-print = { workspace = true }
docify = { workspace = true }
futures = { features = ["thread-pool"], workspace = true }
jsonrpsee = { features = ["server"], workspace = true }
log = { workspace = true, default-features = true }
serde = { features = ["derive"], workspace = true, default-features = true }
serde_json = { workspace = true, default-features = true }

polkadot-sdk = { workspace = true, features = ["node"] }

# Substrate
prometheus-endpoint = { workspace = true, default-features = true }
sc-tracing = { workspace = true, default-features = true }

# substrate client
sc-cli = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sc-offchain = { workspace = true, default-features = true }
qfc-consensus-spin = { workspace = true, default-features = true }
qfp-consensus-spin = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-consensus-grandpa = { workspace = true, default-features = true }
sp-consensus-grandpa = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }

# substrate primitives
sp-runtime = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }

# frame and pallets
frame-system = { workspace = true, default-features = true }
frame-metadata-hash-extension = { workspace = true, default-features = true }
pallet-transaction-payment = { workspace = true, default-features = true }
pallet-transaction-payment-rpc = { workspace = true, default-features = true }
substrate-frame-rpc-system = { workspace = true, default-features = true }

# These dependencies are used for runtime benchmarking
frame-benchmarking-cli = { workspace = true, default-features = true }

qf-runtime = { workspace = true }

[build-dependencies]
polkadot-sdk = { workspace = true, features = ["substrate-build-script-utils"] }

[features]
default = ["std"]
std = [
	"log/std",
	"qf-runtime/std",
	"polkadot-sdk/std",
]
runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"qf-runtime/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"polkadot-sdk/runtime-benchmarks",
]
try-runtime = [
	"frame-system/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"qf-runtime/try-runtime",
	"sp-runtime/try-runtime",
	"polkadot-sdk/try-runtime",
]
