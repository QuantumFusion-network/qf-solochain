ARG BUILD_ARCH=x86_64
ARG QF_REF=main

FROM --platform=linux/${BUILD_ARCH} debian:bullseye AS builder

LABEL MAINTAINER="QF Network <admin@qfnetwork.xyz>"

SHELL ["/bin/sh", "-c"]

RUN apt update && apt install -y gcc g++ make curl git protobuf-compiler libclang-dev
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain 1.84.1 -y
ENV PATH="$PATH:/root/.cargo/bin"
RUN rustup target add wasm32-unknown-unknown --toolchain 1.84.1-x86_64-unknown-linux-gnu
RUN rustup component add rust-src --toolchain 1.84.1-x86_64-unknown-linux-gnu

FROM builder AS builder-solochain

WORKDIR /opt
RUN git config --global http.postBuffer 157286400
RUN git clone https://github.com/QuantumFusion-network/qf-solochain.git && \
    cd qf-solochain && \
    git checkout ${QF_REF}

WORKDIR /opt/qf-solochain
RUN cargo build --release

FROM --platform=linux/${BUILD_ARCH} debian:bullseye-slim

LABEL MAINTAINER="QF Network <admin@qfnetwork.xyz>"

RUN apt-get update && \
    apt-get install -y ca-certificates protobuf-compiler curl && \
    update-ca-certificates && \
    mkdir -p /opt/qf-solochain

ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt

COPY --from=builder-solochain /opt/qf-solochain/target/release/qf-node /opt/qf-solochain/qf-node
COPY --from=builder-solochain /opt/qf-solochain/target/release/qf-parachain-node /opt/qf-solochain/qf-parachain-node


WORKDIR /opt/qf-solochain

# No ENTRYPOINT or CMD - will be provided by docker-compose
