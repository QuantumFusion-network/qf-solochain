[workspace.package]
authors = ["Quantum Fusion Network <admin@qfnetwork.xyz>"]
edition = "2021"
homepage = "https://qfnetwork.xyz/"
license = ""
repository = "https://github.com/QuantumFusion-network"

[workspace]
resolver = "2"

members = [
	"client/*",
	"node",
	"pallets/qf-polkavm",
	"pallets/qf-polkavm-dev",
	"pallets/spin-polkadot",
	"parachain/node",
	"primitives/*",
	"runtimes/qf-runtime",
]
exclude = [
	"pvm_prog",
	"vendor",
]

[workspace.dependencies]
async-trait = { version = "0.1.79" }
codec = { version = "3.6.12", default-features = false, package = "parity-scale-codec" }
log = { version = "0.4.22", default-features = false }
scale-info = { version = "2.11.1", default-features = false }

# Debug
tracing = { version = "0.1.40", default-features = false }
# std
color-print = { version = "0.3.4" }
docify = { version = "0.2.9" }
env_logger = { version = "0.11.3" }
hex-literal = { version = "0.4.1", default-features = false }
parking_lot = { version = "0.12.1", default-features = false }
serde = { version = "1.0.214", default-features = false }
smallvec = { version = "1.11.0", default-features = false }
tempfile = { version = "3.8.1" }
thiserror = { version = "1.0.64" }
tokio = { version = "1.40.0", default-features = false }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# Node
clap = { version = "4.5.10" }
frame-benchmarking-cli = { version = "47.2.0", default-features = false }
futures = { version = "0.3.30" }
jsonrpsee = { version = "0.24.7" }
pallet-transaction-payment-rpc = { version = "43.0.0", default-features = false }
polkadot-parachain-primitives = { version = "16.1.0", default-features = false }
polkadot-sdk = { version = "2503.0.1", default-features = false }
polkavm = { path = "vendor/polkavm/crates/polkavm", default-features = false, package = "polkavm" }
qf-parachain-runtime = { path = "runtimes/parachain", default-features = false }
qf-runtime = { path = "runtimes/qf-runtime", default-features = false }
qfc-consensus-spin = { path = "client/consensus-spin", default-features = false }
sc-basic-authorship = { version = "0.49.0", default-features = false }
sc-block-builder = { version = "0.44.0", default-features = false }
sc-chain-spec = { version = "42.0.0", default-features = false }
sc-cli = { version = "0.51.0", default-features = false }
sc-client-api = { version = "39.0.0", default-features = false }
sc-consensus = { version = "0.48.0", default-features = false }
sc-consensus-grandpa = { version = "0.34.0", default-features = false }
sc-consensus-slots = { version = "0.48.0", default-features = false }
sc-executor = { version = "0.42.0", default-features = false }
sc-keystore = { version = "35.0.0", default-features = false }
sc-network = { version = "0.49.1", default-features = false }
sc-network-types = { version = "0.15.3", default-features = false }
sc-offchain = { version = "44.0.0", default-features = false }
sc-rpc-api = { version = "0.48.0", default-features = false }
sc-serde-json = { version = "0.1.0", default-features = false }
sc-service = { version = "0.50.0", default-features = false }
sc-telemetry = { version = "28.1.0", default-features = false }
sc-tracing = { version = "39.0.0", default-features = false }
sc-transaction-pool = { version = "39.0.0", default-features = false }
sc-transaction-pool-api = { version = "39.0.0", default-features = false }
serde_json = { version = "1.0.124", default-features = false }
sp-blockchain = { version = "39.0.0", default-features = false }
sp-io = { version = "40.0.1", default-features = false }
sp-keyring = { version = "41.0.0", default-features = false }
sp-timestamp = { version = "36.0.0", default-features = false }
sp-tracing = { version = "17.1.0", default-features = false }
sp-trie = { version = "39.1.0", default-features = false }
substrate-build-script-utils = { version = "11.0.0", default-features = false }
substrate-frame-rpc-system = { version = "43.0.0", default-features = false }

# this is a frame-based runtime, thus importing `frame` with runtime feature enabled.
frame = { version = "0.9.1", default-features = false, package = "polkadot-sdk-frame" }
frame-benchmarking = { version = "40.2.0", default-features = false }
frame-election-provider-support = { version = "40.1.1", default-features = false }
frame-executive = { version = "40.0.1", default-features = false }
frame-metadata-hash-extension = { version = "0.8.0", default-features = false }
frame-support = { version = "40.1.0", default-features = false }
frame-system = { version = "40.1.0", default-features = false }
frame-system-benchmarking = { version = "40.0.0", default-features = false }
frame-system-rpc-runtime-api = { version = "36.0.0", default-features = false }
frame-try-runtime = { version = "0.46.0", default-features = false }

cumulus-pallet-parachain-system = { version = "0.20.0", default-features = false }
cumulus-primitives-aura = { version = "0.17.0", default-features = false }

pallet-aura = { version = "39.0.0", default-features = false }
pallet-faucet = { path = "pallets/faucet", default-features = false }
pallet-grandpa = { version = "40.0.0", default-features = false }
pallet-qf-polkavm = { path = "pallets/qf-polkavm", default-features = false }
pallet-qf-polkavm-dev = { path = "pallets/qf-polkavm-dev", default-features = false }
pallet-spin = { path = "pallets/spin", default-features = false }
pallet-spin-polkadot = { path = "pallets/spin-polkadot", default-features = false }
pallet-template = { version = "0.1.0", default-features = false }
prometheus-endpoint = { version = "0.17.2", package = "substrate-prometheus-endpoint", default-features = false }
qfp-consensus-spin = { path = "primitives/consensus-spin", default-features = false }
sp-api = { version = "36.0.1", default-features = false }
sp-application-crypto = { version = "40.1.0", default-features = false }
sp-block-builder = { version = "36.0.0", default-features = false }
sp-consensus = { version = "0.42.0", default-features = false }
sp-consensus-grandpa = { version = "23.1.0", default-features = false }
sp-consensus-slots = { version = "0.42.1", default-features = false }
sp-core = { version = "36.1.0", default-features = false }
sp-inherents = { version = "36.0.0", default-features = false }
sp-keystore = { version = "0.42.0", default-features = false }
sp-offchain = { version = "36.0.0", default-features = false }
sp-session = { version = "38.1.0", default-features = false }
sp-staking = { version = "38.0.0", default-features = false }
sp-std = { version = "14.0.0", default-features = false }
sp-storage = { version = "22.0.0", default-features = false }
sp-transaction-pool = { version = "36.0.0", default-features = false }
substrate-wasm-builder = { version = "26.0.1", default-features = false }

# pallets that we want to use
pallet-balances = { version = "41.1.0", default-features = false }
pallet-session = { version = "40.0.1", default-features = false }
pallet-staking = { version = "40.1.1", default-features = false }
pallet-staking-reward-curve = { version = "12.0.0", default-features = false }
pallet-staking-runtime-api = { version = "26.0.0", default-features = false }
pallet-sudo = { version = "40.0.0", default-features = false }
pallet-timestamp = { version = "39.0.0", default-features = false }
pallet-transaction-payment = { version = "40.0.0", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "40.0.0", default-features = false }

# genesis builder that allows us to interact with runtime genesis config
sp-genesis-builder = { version = "0.17.0", default-features = false }
sp-runtime = { version = "41.1.0", features = ["serde"], default-features = false }
sp-version = { version = "39.0.0", default-features = false }
sp-version-proc-macro = { version = "15.0.0", default-features = false }

substrate-test-runtime-client = { version = "2.0.0", default-features = false }

# polkavm
image = { version = "0.24.7", default-features = false }
libc = "0.2.149"
paste = "1.0.15"
ruzstd = { version = "0.5.0", default-features = false }
schnellru = { version = "0.2.3" }

polkavm-assembler = { path = "vendor/polkavm/crates/polkavm-assembler", default-features = false }
polkavm-common = { path = "vendor/polkavm/crates/polkavm-common", default-features = false }
polkavm-derive = { path = "vendor/polkavm/crates/polkavm-derive", default-features = false }
polkavm-derive-impl = { path = "vendor/polkavm/crates/polkavm-derive-impl", default-features = false }
polkavm-derive-impl-macro = { path = "vendor/polkavm/crates/polkavm-derive-impl-macro", default-features = false }
polkavm-disassembler = { path = "vendor/polkavm/crates/polkavm-disassembler", default-features = false }
polkavm-linker = { path = "vendor/polkavm/crates/polkavm-linker", default-features = false }
polkavm-linux-raw = { path = "vendor/polkavm/crates/polkavm-linux-raw", default-features = false }

# On-demand coretime
order-primitives = { git = "https://github.com/RegionX-Labs/On-Demand.git", rev = "e565f0e52f1e380e1d8d269e7e1b6cb5615c431c", default-features = false }
pallet-on-demand = { git = "https://github.com/RegionX-Labs/On-Demand.git", rev = "e565f0e52f1e380e1d8d269e7e1b6cb5615c431c", default-features = false }
polkadot-runtime-parachains = { version = "19.1.0", default-features = false }
rococo-runtime = { version = "22.1.0", default-features = false }

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(kani)', 'cfg(polkavm_dev_debug_zygote)'] }

[workspace.lints.clippy]
# This also triggers on cases like `.or_insert_with(Vec::new)`.
unwrap_or_default = "allow"
get_first = "allow"
manual_range_contains = "allow"
let_unit_value = "allow"
unit_arg = "allow"
type_complexity = "allow"

# These are are 'allow' by default.
alloc_instead_of_core = "warn"
as_ptr_cast_mut = "warn"
as_underscore = "warn"
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
cast_ptr_alignment = "warn"
clear_with_drain = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
copy_iterator = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
default_union_representation = "warn"
disallowed_script_idents = "warn"
doc_link_with_quotes = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
exit = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
ignored_unit_patterns = "warn"
implicit_clone = "warn"
implicit_hasher = "warn"
inconsistent_struct_constructor = "warn"
index_refutable_slice = "warn"
inefficient_to_string = "warn"
# infinite_loop = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
# iter_over_hash_type = "warn"
large_stack_arrays = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
lossy_float_literal = "warn"
manual_instant_elapsed = "warn"
# manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_unwrap_or = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
maybe_infinite_iter = "warn"
mismatching_type_param_order = "warn"
# missing_assert_message = "warn"
missing_fields_in_debug = "warn"
mixed_read_write_in_expression = "warn"
mut_mut = "warn"
mutex_atomic = "warn"
mutex_integer = "warn"
needless_collect = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
needless_raw_string_hashes = "warn"
needless_raw_strings = "warn"
no_mangle_with_rust_abi = "warn"
nonstandard_macro_braces = "warn"
# option_as_ref_cloned = "warn"
partial_pub_fields = "warn"
path_buf_push_overwrite = "warn"
print_stderr = "warn"
print_stdout = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
# pub_underscore_fields = "warn"
range_minus_one = "warn"
read_zero_byte_vec = "warn"
readonly_write_lock = "warn"
redundant_clone = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
same_name_method = "warn"
std_instead_of_core = "warn"
str_to_string = "warn"
string_add = "warn"
string_add_assign = "warn"
string_to_string = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivially_copy_pass_by_ref = "warn"
type_repetition_in_bounds = "warn"
undocumented_unsafe_blocks = "warn"
# uninhabited_references = "warn"
unsafe_derive_deserialize = "warn"
unused_peekable = "warn"
unused_self = "warn"
use_debug = "warn"
used_underscore_binding = "warn"

cast_lossless = "deny"
expl_impl_clone_on_copy = "deny"
transmute_ptr_to_ptr = "deny"

[profile.release]
# runtime requires unwinding.
panic = "unwind"
opt-level = 3
