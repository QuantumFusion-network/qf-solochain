name: Build, Release, and Publish Docker

on:
  push:
    tags:
      - "*"

jobs:
  build_binary:
    name: Build Binary
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup build environment
        run: |
          sudo apt update
          sudo apt install -y gcc g++ make curl git protobuf-compiler libclang-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain nightly -y
          export PATH="$HOME/.cargo/bin:$PATH"
          rustup target add wasm32-unknown-unknown --toolchain nightly-x86_64-unknown-linux-gnu
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu

      - name: Build Project
        run: |
          make vendor-clone
          make qf-node

      - name: Archive output files
        id: archive_files
        run: |
          TAG="${GITHUB_REF##*/}"
          mkdir -p artifacts
          tar -czvf "artifacts/qf-solochain-output-${TAG}.tar.gz" output
          echo "FILE_NAME=qf-solochain-output-${TAG}.tar.gz" >> $GITHUB_ENV

      - name: Generate release name
        id: release_info
        run: |
          REPO_NAME=$(basename "$(git rev-parse --show-toplevel)")
          TAG="${GITHUB_REF##*/}"
          echo "RELEASE_NAME=${REPO_NAME}-${TAG}" >> $GITHUB_ENV
          echo "TAG_NAME=${TAG}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false
          files: |
            artifacts/${{ env.FILE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_docker:
    name: Build and Publish Docker Image
    runs-on: [self-hosted, Linux, X64]
    needs: build_binary

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Build and Tag Docker Image
        run: |
          docker build -f docker/Dockerfile.x86_64 -t qf-solochain:${{ env.TAG_NAME }} .
          docker tag qf-solochain:${{ env.TAG_NAME }} ${{ secrets.DOCKER_HUB_USERNAME }}/qf-solochain:${{ env.TAG_NAME }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/qf-solochain:${{ env.TAG_NAME }}
