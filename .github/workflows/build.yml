name: Build

on:
  push:
    branches:
      - runner-test

jobs:
  build_binary:
    name: Build Binary
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup build environment
        run: |
          sudo apt update
          sudo apt install -y gcc g++ make curl git protobuf-compiler libclang-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain nightly -y

          . "$HOME/.cargo/env"

          rustup target add wasm32-unknown-unknown --toolchain nightly-x86_64-unknown-linux-gnu
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu

          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

#      - name: Build Project
#        run: |
#          cargo --version
#          make vendor-clone
#          make qf-node

      - name: Build Project
        run: |
          mkdir output
          echo "it's qf-node test" > output/qf-node
          echo "it's qf_runtime.wasm test" > output/qf_runtime.wasm

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp output/qf-node artifacts/qf-node-${{ github.ref_name }}
          cp output/qf_runtime.wasm artifacts/qf_runtime${{ github.ref_name }}.wasm

      - name: Generate checksums
        id: checksums
        run: |
          SHA256_QFNODE=$(sha256sum artifacts/qf-node-${{ github.ref_name }} | cut -d ' ' -f1)
          BLAKE2_QFNODE=$(b2sum artifacts/qf-node-${{ github.ref_name }} | cut -d ' ' -f1)
          SHA256_QFRUNTIME=$(sha256sum artifacts/qf_runtime${{ github.ref_name }}.wasm | cut -d ' ' -f1)
          BLAKE2_QFRUNTIME=$(b2sum artifacts/qf_runtime${{ github.ref_name }}.wasm | cut -d ' ' -f1)
          echo "sha256_qfnode=$SHA256_QFNODE" >> $GITHUB_OUTPUT
          echo "blake2_qfnode=$BLAKE2_QFNODE" >> $GITHUB_OUTPUT
          echo "sha256_qfruntime=$SHA256_QFRUNTIME" >> $GITHUB_OUTPUT
          echo "blake2_qfruntime=$BLAKE2_QFRUNTIME" >> $GITHUB_OUTPUT